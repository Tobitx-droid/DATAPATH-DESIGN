----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 02/06/2023 11:08:02 AM
-- Design Name: 
-- Module Name: audioClk - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_unsigned.all;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity audioClk is
    Port (
        clk,rst   : in std_logic;
        outClk       : out std_logic
     );
end audioClk;

architecture Behavioral of audioClk is

------signal declaration---------------
    signal clktemp: std_logic_vector(5 downto 0);
   -- signal newclksig : std_logic;

begin

clkProcess: process(clk,rst) is
                    begin
                        if(rst = '1') then
                            clktemp <= (others => '0');
                        elsif(rising_edge(clk)) then
                            clktemp <=  clktemp + 1;
                           -- newclksig <= clktemp(5); Doing this does not allow one to get the exact desired frequency because the increment of the signal only occurs after the entire process and doing this causes a delay thereby making it act as if an additional bit has been added to the counter making it 7 bits instead of 6 bits.
                        end if;
                end process;
     
    outClk <= clktemp(5);
    


end Behavioral;
