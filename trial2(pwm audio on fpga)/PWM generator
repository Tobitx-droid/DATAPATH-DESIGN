----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 04/21/2023 02:44:09 PM
-- Design Name: 
-- Module Name: pwmGen - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_unsigned.all;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity pwmGen is
    Port (
        clk,rst: in std_logic;  --25MHz
        data   : in std_logic_vector(15 downto 0);
        pwmOut : out std_logic
        
     );
end pwmGen;

architecture Behavioral of pwmGen is

signal countTemp: std_logic_vector(15 downto 0);

begin

  
                                   

    countProcess: process(clk,rst) is
                    variable countVar : std_logic_vector(15 downto 0);
                    
                    begin
                        if(rst = '1') then
                            countVar := (others => '0');
                            
                        elsif(rising_edge(clk)) then
                            countVar :=  countVar + 1;
                            
                            countTemp <= countVar  ;
                            if(countVar = x"10000")then
                                countVar := (others => '0');
                            end if;
                            if(unsigned(countVar) < unsigned(data))then
                                pwmOut <= '1';
                            else
                               pwmOut <= '0'; 
                            end if;
                            
                        end if;
                end process;

   
end Behavioral;
