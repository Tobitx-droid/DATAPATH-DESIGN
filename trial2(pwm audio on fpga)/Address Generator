----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 04/27/2023 02:31:15 PM
-- Design Name: 
-- Module Name: addGen - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_unsigned.all;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity addGen is
    Port (
        clk,rst : in std_logic;
        address : out std_logic_vector(19 downto 0)
     );
end addGen;

architecture Behavioral of addGen is

-------signal declaration------------
signal countTemp: std_logic_vector(15 downto 0);
signal addressTemp : std_logic_vector(19 downto 0);

begin

countProcess: process(clk,rst) is
                    variable countVar : std_logic_vector(15 downto 0);
                    variable addressVar : std_logic_vector(19 downto 0);
                    begin
                        if(rst = '1') then
                            countVar := (others => '0');
                            addressVar := (others => '0');
                        elsif(rising_edge(clk)) then
                            countVar :=  countVar + 1;
                            
                            countTemp <= countVar;
                            if(countVar = "1111111111111111")then
                                addressVar :=  addressVar + 1;
                                addressTemp <= addressVar;
                                if(addressVar = "11111111111111111111")then 
                                    addressVar := (others => '0');
                                    --addressTemp <= addressVar;
                                end if;
                            end if;
                            
                        end if;
                end process;
     
    address <= addressTemp;

end Behavioral;
